//////////////////////////////////////////////////////////////////////
// log.go
//////////////////////////////////////////////////////////////////////
package log

import (
    "fmt"
    "io"
    "log"
    "os"
)


var (
    l = log.New(os.Stdout, "", log.LstdFlags|log.Lshortfile)
)


//////////////////////////////////////////////////////////////////////
// Error
//////////////////////////////////////////////////////////////////////
func Error(v ...interface{}) {
    l.Output(2, fmt.Sprintf("[ERROR] %s\n", fmt.Sprint(v...)))
}


//////////////////////////////////////////////////////////////////////
// Debug
//////////////////////////////////////////////////////////////////////
func Debug(v ...interface{}) {
    l.Output(2, fmt.Sprintf("[DEBUG] %s\n", fmt.Sprint(v...)))
}


//////////////////////////////////////////////////////////////////////
// Fatal
//////////////////////////////////////////////////////////////////////
func Fatal(v ...interface{}) {
    l.Output(2, fmt.Sprintf("[FATAL] %s\n", fmt.Sprint(v...)))
    os.Exit(1)
}


//////////////////////////////////////////////////////////////////////
// Info
//////////////////////////////////////////////////////////////////////
func Info(v ...interface{}) {
    l.Output(2, fmt.Sprintf("[INFO] %s\n", fmt.Sprint(v...)))
}


//////////////////////////////////////////////////////////////////////
// Panic
//////////////////////////////////////////////////////////////////////
func Panic(v ...interface{}) {
    l.Output(2, fmt.Sprintf("[PANIC] %s\n", fmt.Sprint(v...)))
    panic(fmt.Sprint(v...))
}


//////////////////////////////////////////////////////////////////////
// SetFlags
//////////////////////////////////////////////////////////////////////
func SetFlags(flag int) {
    l.SetFlags(flag)
}


//////////////////////////////////////////////////////////////////////
// SetOutput
//////////////////////////////////////////////////////////////////////
func SetOutput(w io.Writer) {
    l.SetOutput(w)
}


//////////////////////////////////////////////////////////////////////
// SetOutput with file path
//////////////////////////////////////////////////////////////////////
func SetOutputWithFilePath(filePath string) {
    f, err := os.OpenFile(filePath, os.O_APPEND|os.O_CREATE|os.O_WRONLY, 0664)
    if err != nil {
        Fatal(err)
    }
    l.SetOutput(f)
}


//////////////////////////////////////////////////////////////////////
// SetPrefix
//////////////////////////////////////////////////////////////////////
func SetPrefix(prefix string) {
    l.SetPrefix(prefix)
}

//////////////////////////////////////////////////////////////////////
// Test
//////////////////////////////////////////////////////////////////////
func Test(v ...interface{}) {
    l.Output(2, fmt.Sprintf("[TEST] %s\n", fmt.Sprint(v...)))
}


//////////////////////////////////////////////////////////////////////
// Warn
//////////////////////////////////////////////////////////////////////
func Warn(v ...interface{}) {
    l.Output(2, fmt.Sprintf("[WARN] %s\n", fmt.Sprint(v...)))
}
